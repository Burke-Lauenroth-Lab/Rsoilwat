% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/swWeatherGenerator.R
\name{dbW_estimate_WGen_coefs}
\alias{dbW_estimate_WGen_coefs}
\title{Estimate coefficients for use by \var{SOILWAT2} weather generator}
\usage{
dbW_estimate_WGen_coefs(weatherData, WET_limit_cm = 0, na.rm = FALSE,
  valNA = NULL, imputation_type = c("none", "mean", "locf"),
  imputation_span = 5L)
}
\arguments{
\item{weatherData}{A list of elements of class
\code{\linkS4class{swWeatherData}} or a \code{data.frame} as returned by
\code{\link{dbW_weatherData_to_dataframe}}.}

\item{WET_limit_cm}{A numeric value. A day with more precipitation than
this value is considered \var{wet} instead of \var{dry}. Default is 0.
This values should be equal to the corresponding value used in
\var{SOILWAT2}'s function \code{SW_MKV_today}.}

\item{na.rm}{A logical value. If \code{TRUE}, then missing weather values
in the input \code{weatherData} are excluded; if \code{FALSE}, then
missing values are propagated.}

\item{valNA}{The (numerical) value of missing weather data.
If \code{NULL}, then default values are interpreted as missing.}

\item{imputation_type}{A character string describing the imputation method;
 currently, one of three values: \describe{
   \item{\var{"none"}}{no imputation is carried out;}
   \item{\var{"mean"}}{missing values will be replaced by the average
     of \code{imputation_span} non-missing values before and
     \code{imputation_span} non-missing values after; note:
     this may fail if there are less than \code{2 * imputation_span}
     non-missing values;}
   \item{\var{"locf"}}{missing values will be replaced by the
     \var{"last-observation-carried-forward"} imputation method.}
}}

\item{imputation_span}{An integer value. The number of non-missing values
considered if \code{imputation_type = "mean"}.}
}
\value{
A list with two named elements:
  \describe{
    \item{\code{mkv_doy}}{A data.frame with 366 rows (day of year) and
       5 columns: \describe{
         \item{DOY}{Day of year.}
         \item{p_W_W}{Probability that doy is wet if the previous day
           (doy - 1) was wet.}
         \item{p_W_D}{Probability that doy is wet if the previous day
           (doy - 1) was dry.}
         \item{PPT_avg}{Average amount of precipitation (centimeters)
           on doy if it is wet.}
         \item{PPT_sd}{Standard deviation of amount of precipitation
           (centimeters) on doy if it is wet.}
       }}
    \item{\code{mkv_woy}}{A data.frame with 53 rows (\var{SOILWAT2}
      weeks of year, i.e., counted as consecutive \var{heptads} of days) and
      11 columns: \describe{
        \item{WEEK}{Week of year.}
        \item{wTmax_C}{Average daily maximum temperature (C) for week.}
        \item{wTmin_C}{Average daily minimum temperature (C) for week.}
        \item{var_MAX}{Variance of daily maximum temperature for week.}
        \item{cov_MAXMIN}{Covariance of daily maximum and minimum
          temperatures for week.}
        \item{cov_MINMAX}{Identical to \code{cov_MAXMIN}.}
        \item{var_MIN}{Variance of daily minimum temperature for week.}
        \item{CF_Tmax_wet}{Difference between average daily maximum
          temperature (C) for wet days of week and \code{wTmax_C}.}
        \item{CF_Tmax_dry}{Difference between average daily maximum
          temperature (C) for dry days of week and \code{wTmax_C}.}
        \item{CF_Tmin_wet}{Same as \code{CF_Tmax_wet} but for daily
          minimum temperature.}
        \item{CF_Tmin_dry}{Same as \code{CF_Tmax_dry} but for daily
          minimum temperature.}
      }}
  }
}
\description{
Estimates coefficients for the two site-specific files
\var{mkv_covar.in} and \var{mkv_prob.in} required by the first-order
Markov weather generator in \var{SOILWAT2} \var{> v4.2.5}.
}
\section{Notes}{
 This code is a complete overhaul compared to the version
  from \var{rSFSTEP2} on \code{2019-Feb-10}
  \url{https://github.com/DrylandEcology/rSFSTEP2/commit/cd9e161971136e1e56d427a4f76062bbb0f3d03a}

 This function will produce \code{NA}s in the output if there
  are insufficient weather observation in the input data \code{weatherData}
  for a specific day or week of the year. Such \code{NA}s will cause a
  \var{SOILWAT2} run to fail (potentially non-graciously and
  with non-obvious error messages). To avoid that, this function offers
  imputation approaches in order to fill in those failed coefficient
  estimates; see \code{\link{impute_df}}, but please note that any such
  imputation likely introduces biases in the generated weather.
}

\examples{
res1 <- dbW_estimate_WGen_coefs(rSOILWAT2::weatherData)
wdata <- data.frame(dbW_weatherData_to_dataframe(weatherData, valNA = NULL))
res2 <- dbW_estimate_WGen_coefs(wdata)

sw_in <- rSOILWAT2::sw_exampleData
swMarkov_Prob(sw_in) <- res2[["mkv_doy"]]
swMarkov_Conv(sw_in) <- res2[["mkv_woy"]]

}
\seealso{
\code{\link{print_mkv_files}} to print values to \var{SOILWAT2}
  compatible files. \code{\link{swMarkov_Prob}} and
  \code{\link{swMarkov_Conv}} to extract/replace values in a \pkg{rSOILWAT2}
  input object of class \code{\linkS4class{swInputData}}.
}
